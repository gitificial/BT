# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.pyplot as plt

# train_scores = [[0.9875, 0.9, 0.4125, 0.95, 0.9125, 0.9375, 0.8625, 0.9375, 0.475, 0.9], [0.8625, 0.93125, 0.85, 0.975, 0.86875, 0.9375, 0.9125, 0.91875, 0.825, 0.925], [0.84166664, 0.8958333, 0.84583336, 0.8958333, 0.90833336, 0.9291667, 0.8958333, 0.9291667, 0.92083335, 0.8625], [0.91875, 0.9125, 0.821875, 0.903125, 0.934375, 0.83125, 0.875, 0.940625, 0.8, 0.978125], [0.91, 0.8925, 0.915, 0.895, 0.945, 0.8625, 0.9275, 0.9225, 0.895, 0.9], [0.78541666, 0.9125, 0.90208334, 0.88958335, 0.84791666, 0.97083336, 0.9145833, 0.8979167, 0.9604167, 0.9166667], [0.94464284, 0.8660714, 0.92142856, 0.90178573, 0.83928573, 0.91964287, 0.8732143, 0.925, 0.92321426, 0.875], [0.928125, 0.89375, 0.8828125, 0.9578125, 0.9109375, 0.8796875, 0.9328125, 0.9, 0.8859375, 0.946875], [0.92638886, 0.8958333, 0.89305556, 0.90555555, 0.92777777, 0.94722223, 0.9013889, 0.92777777, 0.90555555, 0.87222224], [0.86375, 0.905, 0.88125, 0.86125, 0.94, 0.8975, 0.8825, 0.925, 0.925, 0.88375], [0.931875, 0.856875, 0.885625, 0.889375, 0.874375, 0.895625, 0.8575, 0.8975, 0.88875, 0.8575], [0.90708333, 0.89666665, 0.85291666, 0.83416665, 0.9058333, 0.9033333, 0.8645833, 0.89208335, 0.875, 0.8933333], [0.8865625, 0.89, 0.8634375, 0.865, 0.8846875, 0.8246875, 0.8503125, 0.8709375, 0.865625, 0.89375]]

test_scores = [[0.85, 0.6, 0.6, 0.9, 0.7, 0.9, 0.7, 0.9, 0.55, 0.75], [0.8, 0.9, 0.775, 0.9, 0.875, 0.85, 0.775, 0.725, 0.7, 0.925], [0.75, 0.76666665, 0.8666667, 0.81666666, 0.8, 0.8, 0.8666667, 0.8833333, 0.81666666, 0.8666667], [0.875, 0.8375, 0.75, 0.8125, 0.8625, 0.7625, 0.8375, 0.8875, 0.8, 0.9125], [0.87, 0.82, 0.76, 0.88, 0.87, 0.82, 0.88, 0.84, 0.83, 0.84], [0.78333336, 0.85833335, 0.81666666, 0.825, 0.8, 0.89166665, 0.8666667, 0.80833334, 0.8666667, 0.85], [0.8214286, 0.75714284, 0.8357143, 0.85, 0.7785714, 0.87857145, 0.8214286, 0.9, 0.8428571, 0.8142857], [0.84375, 0.84375, 0.8, 0.89375, 0.8375, 0.85625, 0.85625, 0.825, 0.86875, 0.9], [0.8611111, 0.87777776, 0.8388889, 0.78333336, 0.85, 0.84444445, 0.8388889, 0.84444445, 0.84444445, 0.82222223], [0.88, 0.79, 0.795, 0.845, 0.845, 0.835, 0.795, 0.845, 0.86, 0.84], [0.875, 0.8125, 0.85, 0.835, 0.85, 0.855, 0.81, 0.8425, 0.805, 0.855], [0.85, 0.87, 0.80833334, 0.815, 0.8516667, 0.85, 0.8466667, 0.865, 0.8433333, 0.82666665], [0.8575, 0.85375, 0.87375, 0.84375, 0.8225, 0.85125, 0.85, 0.84625, 0.85125, 0.86875]]


#---------------------------------------------------------------------------------

train_sizes = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000, 4000]

# train_scores_mean = np.mean(train_scores, axis=1)
# train_scores_std = np.std(train_scores, axis=1)
test_scores_mean = np.mean(test_scores, axis=1)
test_scores_std = np.std(test_scores, axis=1)
plt.grid()

#plt.fill_between(train_sizes, train_scores_mean - train_scores_std, train_scores_mean + train_scores_std, alpha=0.1, color="r")
plt.fill_between(train_sizes, test_scores_mean - test_scores_std,
                     test_scores_mean + test_scores_std, alpha=0.1, color="g")

# plt.plot(train_sizes, train_scores_mean, 'o-', color="r", label="Training score")
# plt.plot(train_sizes, test_scores_mean, 'o-', color="g", label="Test score")

# plt.plot(train_sizes, train_scores_mean, 'o-', color="r", label="Training")
plt.plot(train_sizes, test_scores_mean, 'o-', color="g", label="CNN-non-static, Skipgram, 10 Trainingsiter.")

plt.xlabel("Datens√§tze")
plt.ylabel("Korrektklassifizierungsrate")
# plt.title("Test Results", fontdict=None, loc='center')

# baseline
plt.axhline(y=0.669, xmin=0, xmax=1, color='blue', linestyle='--', label='Baseline')

plt.legend(loc="lower right")
plt.savefig('results.png')
plt.show()


#---------------------------------------------------------------------------------
