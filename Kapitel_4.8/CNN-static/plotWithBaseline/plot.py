# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.pyplot as plt

# train_scores = [[0.6625, 0.575, 0.5875, 0.7625, 0.5, 0.55, 0.575, 0.5875, 0.575, 0.575], [0.58125, 0.43125, 0.60625, 0.56875, 0.45, 0.55625, 0.4375, 0.59375, 0.56875, 0.575], [0.641667, 0.475, 0.6375, 0.6, 0.49583299999999997, 0.529167, 0.5625, 0.470833, 0.641667, 0.466667], [0.578125, 0.61875, 0.49375, 0.590625, 0.69375, 0.596875, 0.73125, 0.5375, 0.55625, 0.559375], [0.62, 0.5225, 0.585, 0.5025, 0.645, 0.4925, 0.6, 0.5575, 0.66, 0.5075], [0.535417, 0.722917, 0.61875, 0.570833, 0.610417, 0.535417, 0.7375, 0.814583, 0.597917, 0.5375], [0.803571, 0.739286, 0.723214, 0.826786, 0.767857, 0.721429, 0.6642859999999999, 0.744643, 0.771429, 0.776786], [0.782813, 0.817187, 0.740625, 0.745313, 0.775, 0.748437, 0.707812, 0.8328120000000001, 0.825, 0.784375], [0.820833, 0.8194440000000001, 0.831944, 0.85, 0.722222, 0.8777780000000001, 0.7944439999999999, 0.806944, 0.834722, 0.806944], [0.83625, 0.795, 0.77625, 0.82625, 0.8525, 0.8675, 0.79375, 0.83375, 0.78375, 0.77875], [0.87375, 0.87625, 0.83375, 0.845625, 0.82625, 0.82875, 0.8375, 0.805625, 0.86, 0.780625], [0.818333, 0.800417, 0.814167, 0.80125, 0.835833, 0.81375, 0.82375, 0.812917, 0.820417, 0.844167], [0.8390629999999999, 0.86375, 0.8634370000000001, 0.838125, 0.855, 0.817187, 0.88375, 0.882188, 0.81125, 0.8625]]

test_scores = [[0.65, 0.65, 0.6, 0.75, 0.55, 0.65, 0.6, 0.45, 0.8, 0.65], [0.575, 0.6, 0.575, 0.525, 0.55, 0.575, 0.575, 0.575, 0.625, 0.675], [0.5, 0.5, 0.716667, 0.666667, 0.45, 0.65, 0.43333299999999997, 0.533333, 0.55, 0.55], [0.5625, 0.675, 0.475, 0.5625, 0.5875, 0.6, 0.65, 0.6, 0.5, 0.575], [0.61, 0.59, 0.53, 0.55, 0.56, 0.57, 0.55, 0.47, 0.56, 0.44], [0.525, 0.575, 0.541667, 0.608333, 0.583333, 0.558333, 0.725, 0.725, 0.633333, 0.558333], [0.735714, 0.621429, 0.7071430000000001, 0.735714, 0.728571, 0.5857140000000001, 0.635714, 0.7071430000000001, 0.7, 0.778571], [0.75, 0.78125, 0.66875, 0.76875, 0.70625, 0.725, 0.73125, 0.79375, 0.73125, 0.76875], [0.738889, 0.7722220000000001, 0.8, 0.805556, 0.761111, 0.7888890000000001, 0.777778, 0.744444, 0.777778, 0.744444], [0.785, 0.705, 0.8, 0.79, 0.8, 0.805, 0.76, 0.775, 0.745, 0.83], [0.85, 0.8225, 0.8325, 0.825, 0.81, 0.8275, 0.8175, 0.79, 0.83, 0.7875], [0.821667, 0.816667, 0.83, 0.833333, 0.805, 0.816667, 0.801667, 0.835, 0.825, 0.826667], [0.835, 0.835, 0.8275, 0.84375, 0.8275, 0.8175, 0.83625, 0.84, 0.825, 0.8325]]


#---------------------------------------------------------------------------------

train_sizes = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000, 4000]

# train_scores_mean = np.mean(train_scores, axis=1)
# train_scores_std = np.std(train_scores, axis=1)
test_scores_mean = np.mean(test_scores, axis=1)
test_scores_std = np.std(test_scores, axis=1)
plt.grid()

# plt.fill_between(train_sizes, train_scores_mean - train_scores_std, train_scores_mean + train_scores_std, alpha=0.1, color="r")
plt.fill_between(train_sizes, test_scores_mean - test_scores_std, test_scores_mean + test_scores_std, alpha=0.1, color="g")

# plt.plot(train_sizes, train_scores_mean, 'o-', color="r", label="Training")
plt.plot(train_sizes, test_scores_mean, 'o-', color="g", label="Test")

plt.xlabel("Datens√§tze")
plt.ylabel("Korrektklassifizierungsrate")
# plt.title("Test Results", fontdict=None, loc='center')

# baseline
plt.axhline(y=0.599, xmin=0, xmax=1, color='blue', linestyle='--', label='Baseline')

plt.legend(loc="lower right")
plt.savefig('results.png')
plt.show()


#---------------------------------------------------------------------------------
