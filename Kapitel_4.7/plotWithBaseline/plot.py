import numpy as np
import matplotlib.pyplot as plt

train_sizes = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000, 4000]


test_sg0_iter5 = [[0.699999988079071, 0.550000011920929, 0.75, 0.6499999761581421, 0.550000011920929, 0.550000011920929, 0.6499999761581421, 0.6000000238418579, 0.6000000238418579, 0.6000000238418579], [0.699999988079071, 0.6000000238418579, 0.699999988079071, 0.550000011920929, 0.550000011920929, 0.574999988079071, 0.550000011920929, 0.574999988079071, 0.550000011920929, 0.625], [0.5833333134651184, 0.5333333611488342, 0.6666666865348816, 0.6833333373069763, 0.5833333134651184, 0.6166666746139526, 0.5333333611488342, 0.6666666865348816, 0.7166666388511658, 0.550000011920929], [0.7125, 0.6625, 0.675, 0.7625, 0.775, 0.675, 0.625, 0.675, 0.7375, 0.55], [0.7799999952316284, 0.6399999976158142, 0.7200000023841858, 0.7300000023841858, 0.6399999928474426, 0.6699999904632569, 0.6400000023841858, 0.6499999904632568, 0.6900000095367431, 0.7999999928474426], [0.725, 0.7416666547457377, 0.7666666587193807, 0.7083333373069763, 0.6833333214124043, 0.6166666785875956, 0.7083333452542623, 0.799999988079071, 0.7333333373069764, 0.7166666666666667], [0.6857142857142857, 0.6928571445601327, 0.7571428571428571, 0.6714285697255816, 0.707142858845847, 0.7857142857142857, 0.6714285697255816, 0.6928571428571428, 0.792857141154153, 0.7071428571428572], [0.725, 0.7375, 0.74375, 0.8375, 0.8125, 0.74375, 0.75625, 0.76875, 0.675, 0.73125], [0.7666666666666667, 0.8055555476082696, 0.7333333373069764, 0.7444444431198968, 0.7944444470935398, 0.7888888968361749, 0.7944444523917304, 0.8055555502573649, 0.7666666706403097, 0.7500000079472859], [0.785, 0.785, 0.76, 0.84, 0.79, 0.77, 0.76, 0.77, 0.74, 0.82], [0.8525, 0.8525, 0.87, 0.8475, 0.865, 0.835, 0.825, 0.8675, 0.755, 0.8375], [0.8500000007947286, 0.86, 0.8716666658719381, 0.8633333325386048, 0.8483333325386048, 0.8450000007947286, 0.85, 0.8566666658719381, 0.8699999992052714, 0.8583333325386048], [0.86, 0.83375, 0.855, 0.85125, 0.87625, 0.845, 0.86, 0.815, 0.8725, 0.83875]]

test_sg0_iter10 = [[0.6499999761581421, 0.800000011920929, 0.5, 0.6000000238418579, 0.550000011920929, 0.5, 0.800000011920929, 0.6499999761581421, 0.6499999761581421, 0.550000011920929], [0.75, 0.4749999940395355, 0.42500001192092896, 0.6499999761581421, 0.550000011920929, 0.574999988079071, 0.675000011920929, 0.675000011920929, 0.574999988079071, 0.5249999761581421], [0.5666666626930237, 0.550000011920929, 0.5166666507720947, 0.5333333611488342, 0.5666666626930237, 0.6333333253860474, 0.6833333373069763, 0.699999988079071, 0.6166666746139526, 0.6666666865348816], [0.65, 0.6625, 0.7125, 0.725, 0.5875, 0.5625, 0.5375, 0.6625, 0.5875, 0.6375], [0.6499999928474426, 0.6699999952316285, 0.6799999928474426, 0.59, 0.6899999904632569, 0.7100000071525574, 0.7200000047683716, 0.6699999928474426, 0.76, 0.6500000071525573], [0.7166666587193807, 0.7166666746139526, 0.7166666706403096, 0.8166666547457377, 0.6166666666666667, 0.774999988079071, 0.674999996026357, 0.6833333412806193, 0.5833333452542623, 0.7166666785875956], [0.7214285714285714, 0.7357142874172755, 0.7714285714285715, 0.6857142840112959, 0.7214285731315613, 0.7000000017029898, 0.7214285714285714, 0.7285714285714285, 0.7857142840112958, 0.7142857125827244], [0.73125, 0.725, 0.725, 0.78125, 0.725, 0.73125, 0.75625, 0.78125, 0.75625, 0.775], [0.7611111071374681, 0.7222222248713176, 0.7444444417953491, 0.8111111137602064, 0.7777777738041348, 0.7888888835906982, 0.6944444497426351, 0.7777777804268731, 0.8111111150847541, 0.7722222248713175], [0.82, 0.8, 0.785, 0.735, 0.78, 0.77, 0.835, 0.825, 0.81, 0.755], [0.8375, 0.845, 0.8625, 0.87, 0.855, 0.8075, 0.87, 0.8525, 0.8375, 0.8725], [0.8550000007947286, 0.8566666658719381, 0.8566666666666667, 0.8266666666666667, 0.8533333333333334, 0.8816666666666667, 0.84, 0.8566666666666667, 0.8316666666666667, 0.8399999992052714], [0.84, 0.82625, 0.85625, 0.86, 0.845, 0.8775, 0.86875, 0.8575, 0.85125, 0.84375]]

test_sg1_iter5 = [[0.6499999761581421, 0.8999999761581421, 0.6000000238418579, 0.6499999761581421, 0.550000011920929, 0.550000011920929, 0.699999988079071, 0.4000000059604645, 0.550000011920929, 0.6000000238418579], [0.550000011920929, 0.574999988079071, 0.75, 0.574999988079071, 0.4749999940395355, 0.625, 0.5249999761581421, 0.574999988079071, 0.574999988079071, 0.6499999761581421], [0.5166666507720947, 0.6666666865348816, 0.5833333134651184, 0.6000000238418579, 0.6499999761581421, 0.5, 0.6833333373069763, 0.5166666507720947, 0.699999988079071, 0.6333333253860474], [0.6375, 0.6125, 0.7625, 0.6625, 0.6625, 0.7125, 0.6125, 0.55, 0.5875, 0.5875], [0.7399999904632568, 0.6599999904632569, 0.6800000071525574, 0.6200000071525573, 0.5999999928474427, 0.6599999904632569, 0.7200000023841858, 0.6199999904632568, 0.6900000023841858, 0.6600000047683716], [0.675000011920929, 0.775, 0.699999992052714, 0.6666666626930237, 0.6833333373069763, 0.6583333214124044, 0.7333333452542623, 0.5916666706403096, 0.7166666746139526, 0.6416666785875956], [0.7142857142857143, 0.6857142857142857, 0.657142858845847, 0.7928571428571428, 0.7285714268684387, 0.6642857142857143, 0.7785714268684387, 0.6857142857142857, 0.7357142840112959, 0.8142857125827244], [0.7375, 0.7375, 0.70625, 0.75, 0.725, 0.81875, 0.66875, 0.79375, 0.79375, 0.74375], [0.7611111031638251, 0.7277777698304918, 0.761111115084754, 0.7666666666666667, 0.733333334657881, 0.7277777738041348, 0.7500000079472859, 0.7555555542310078, 0.7222222222222222, 0.666666661368476], [0.72, 0.82, 0.775, 0.8, 0.875, 0.74, 0.775, 0.805, 0.8, 0.88], [0.8575, 0.87, 0.855, 0.8675, 0.835, 0.8525, 0.855, 0.8625, 0.86, 0.855], [0.86, 0.8533333325386048, 0.8449999992052714, 0.8650000007947286, 0.8599999992052714, 0.8466666674613953, 0.855, 0.8633333333333333, 0.8483333341280619, 0.8933333341280619], [0.85625, 0.8825, 0.83375, 0.875, 0.85375, 0.85375, 0.86, 0.845, 0.8675, 0.8525]]

test_sg1_iter10 = [[0.699999988079071, 0.550000011920929, 0.550000011920929, 0.550000011920929, 0.4000000059604645, 0.6499999761581421, 0.800000011920929, 0.6000000238418579, 0.75, 0.75], [0.574999988079071, 0.42500001192092896, 0.44999998807907104, 0.550000011920929, 0.675000011920929, 0.6499999761581421, 0.6499999761581421, 0.75, 0.5249999761581421, 0.5], [0.699999988079071, 0.4833333194255829, 0.4833333194255829, 0.5666666626930237, 0.6666666865348816, 0.5833333134651184, 0.5833333134651184, 0.6000000238418579, 0.4833333194255829, 0.6000000238418579], [0.4125, 0.6625, 0.5625, 0.6625, 0.6625, 0.6875, 0.625, 0.6875, 0.7875, 0.625], [0.7299999952316284, 0.72, 0.6799999952316285, 0.6599999904632569, 0.7000000071525574, 0.7399999904632568, 0.7, 0.7199999904632568, 0.76, 0.7100000095367431], [0.7666666587193807, 0.725000011920929, 0.7833333293596904, 0.7749999920527141, 0.7416666746139526, 0.6333333253860474, 0.7249999880790711, 0.6500000119209289, 0.7, 0.6833333253860474], [0.6857142865657806, 0.7642857159887041, 0.7428571428571429, 0.8, 0.7785714302744184, 0.7428571445601327, 0.6928571445601327, 0.7500000017029899, 0.7214285714285714, 0.7571428554398673], [0.775, 0.625, 0.7625, 0.74375, 0.73125, 0.73125, 0.71875, 0.74375, 0.75, 0.78125], [0.7444444404708015, 0.7388888941870795, 0.816666669315762, 0.7055555635028415, 0.7222222142749363, 0.7833333280351427, 0.7722222182485793, 0.6833333412806193, 0.7555555595291985, 0.8000000066227383], [0.75, 0.725, 0.735, 0.82, 0.815, 0.815, 0.775, 0.775, 0.75, 0.82], [0.815, 0.8525, 0.8675, 0.8375, 0.8425, 0.835, 0.87, 0.8725, 0.805, 0.8575], [0.8299999992052715, 0.8766666666666667, 0.8649999992052714, 0.8466666674613953, 0.8666666674613953, 0.8500000007947286, 0.8533333325386048, 0.8449999992052714, 0.855, 0.865], [0.86375, 0.85625, 0.87375, 0.84875, 0.87375, 0.8525, 0.84875, 0.85875, 0.87375, 0.8575]]

test_sg0_iter5_mean = np.mean(test_sg0_iter5, axis=1)
test_sg0_iter5_std = np.std(test_sg0_iter5, axis=1)

test_sg0_iter10_mean = np.mean(test_sg0_iter10, axis=1)
test_sg0_iter10_std = np.std(test_sg0_iter10, axis=1)

test_sg1_iter5_mean = np.mean(test_sg1_iter5, axis=1)
test_sg1_iter5_std = np.std(test_sg1_iter5, axis=1)

test_sg1_iter10_mean = np.mean(test_sg1_iter10, axis=1)
test_sg1_iter10_std = np.std(test_sg1_iter10, axis=1)

plt.grid()

plt.fill_between(train_sizes, test_sg0_iter5_mean - test_sg0_iter5_std, test_sg0_iter5_mean + test_sg0_iter5_std, alpha=0.1, color="g")

plt.fill_between(train_sizes, test_sg0_iter10_mean - test_sg0_iter10_std, test_sg0_iter10_mean + test_sg0_iter10_std, alpha=0.1, color="b")

plt.fill_between(train_sizes, test_sg1_iter5_mean - test_sg1_iter5_std, test_sg1_iter5_mean + test_sg1_iter5_std, alpha=0.1, color="r")

plt.fill_between(train_sizes, test_sg1_iter10_mean - test_sg1_iter10_std, test_sg1_iter10_mean + test_sg1_iter10_std, alpha=0.1, color="y")

plt.plot(train_sizes, test_sg0_iter5_mean, 'o-', color="g", label="CBOW, 5 Trainingsiterationen")
plt.plot(train_sizes, test_sg0_iter10_mean, 'o-', color="b", label="CBOW, 10 Trainingsiterationen")

plt.plot(train_sizes, test_sg1_iter5_mean, 'o-', color="r", label="Skipgram, 5 Trainingsiterationen")
plt.plot(train_sizes, test_sg1_iter10_mean, 'o-', color="y", label="Skipgram, 10 Trainingsiterationen")

plt.axhline(y=0.599, xmin=0, xmax=1, color='blue', linestyle='--', label='Baseline')

plt.xlabel("DatensÃ¤tze")
plt.ylabel("Korrektklassifizierungsrate")

# plt.legend(loc="best")
plt.legend(loc="lower right")

plt.savefig('results.png')
plt.show()
