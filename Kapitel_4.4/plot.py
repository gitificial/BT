import numpy as np
import matplotlib.pyplot as plt

train_scores = [[0.4125, 0.4375, 0.575, 0.5875, 0.55, 0.5375, 0.575, 0.5, 0.4625, 0.6125], [0.6, 0.59, 0.625, 0.57, 0.545, 0.505, 0.535, 0.52, 0.6, 0.57], [0.7775, 0.715, 0.7175, 0.82, 0.6625, 0.525, 0.6725, 0.56, 0.5875, 0.77], [0.8699999992052714, 0.75, 0.8416666666666667, 0.65, 0.7816666658719381, 0.7533333333333333, 0.8483333325386048, 0.8333333341280619, 0.8466666674613953, 0.8483333325386048], [0.85875, 0.8325, 0.87, 0.91625, 0.8325, 0.89375, 0.80625, 0.885, 0.8775, 0.87125], [0.92625, 0.909375, 0.923125, 0.9275, 0.925, 0.935625, 0.900625, 0.93125, 0.92125, 0.89625], [0.91875, 0.9329166666666666, 0.9291666666666667, 0.9220833333333334, 0.9229166666666667, 0.90375, 0.9325, 0.9270833333333334, 0.94, 0.9208333333333333], [0.91625, 0.9221875, 0.915625, 0.92875, 0.9140625, 0.9234375, 0.9303125, 0.9359375, 0.9115625, 0.903125], [0.94175, 0.91925, 0.9305, 0.92625, 0.9155, 0.94175, 0.926, 0.93475, 0.92575, 0.9295], [0.9297916666666667, 0.9345833333333333, 0.9191666666666667, 0.915625, 0.9477083333333334, 0.9460416666666667, 0.9235416666666667, 0.92, 0.93875, 0.93375], [0.9008928571428572, 0.9308928571428572, 0.9058928571428572, 0.9248214285714286, 0.9148214285714286, 0.9369642857142857, 0.9430357142857143, 0.9333928571428571, 0.9303571428571429, 0.9444642857142858], [0.92265625, 0.94828125, 0.91140625, 0.9396875, 0.9196875, 0.92359375, 0.93625, 0.92515625, 0.94203125, 0.9375], [0.9343055555555555, 0.8880555555555556, 0.9305555555555556, 0.9441666666666667, 0.9294444444444444, 0.9447222222222222, 0.9423611111111111, 0.9404166666666667, 0.93625, 0.9079166666666667], [0.91875, 0.924625, 0.9245, 0.920625, 0.944375, 0.93325, 0.939125, 0.926125, 0.908625, 0.903375]]

test_scores = [[0.8500000238418579, 0.699999988079071, 0.6499999761581421, 0.550000011920929, 0.550000011920929, 0.699999988079071, 0.800000011920929, 0.6499999761581421, 0.550000011920929, 0.6499999761581421], [0.5600000023841858, 0.5600000023841858, 0.6200000047683716, 0.5400000214576721, 0.5, 0.5799999833106995, 0.47999998927116394, 0.6800000071525574, 0.6399999856948853, 0.6600000262260437], [0.7599999928474426, 0.6500000023841858, 0.7800000047683716, 0.8200000095367431, 0.6800000023841858, 0.61, 0.5900000095367431, 0.6000000095367432, 0.5000000023841857, 0.8700000071525573], [0.8733333309491476, 0.8199999976158142, 0.860000003973643, 0.8333333325386048, 0.820000003973643, 0.773333330154419, 0.8666666658719381, 0.8466666682561239, 0.8133333349227905, 0.8733333309491476], [0.86, 0.87, 0.88, 0.885, 0.87, 0.9, 0.895, 0.93, 0.87, 0.895], [0.915, 0.925, 0.9025, 0.8875, 0.895, 0.9025, 0.9, 0.905, 0.935, 0.9025], [0.8916666674613952, 0.923333334128062, 0.9266666666666666, 0.9166666666666666, 0.94, 0.926666665871938, 0.9016666666666666, 0.9333333325386047, 0.931666665871938, 0.9233333333333333], [0.89375, 0.905, 0.9075, 0.92, 0.92625, 0.91375, 0.91375, 0.9075, 0.91875, 0.91], [0.9229999995231628, 0.9300000009536743, 0.9200000009536743, 0.9170000009536743, 0.9239999990463257, 0.9239999995231628, 0.9040000004768372, 0.9199999995231628, 0.9310000004768372, 0.9410000009536743], [0.9241666674613953, 0.9333333325386047, 0.9283333333333333, 0.9141666674613953, 0.9308333333333333, 0.928333334128062, 0.9208333341280619, 0.9416666666666667, 0.918333334128062, 0.9249999992052714], [0.937857141835349, 0.9350000003405979, 0.9192857142857143, 0.9150000010217939, 0.9114285704067775, 0.9157142846924918, 0.9321428574834552, 0.9242857136045184, 0.9250000010217939, 0.9249999993188041], [0.924375, 0.92625, 0.914375, 0.918125, 0.933125, 0.923125, 0.934375, 0.925, 0.929375, 0.92875], [0.9344444444444444, 0.9133333333333333, 0.9166666666666666, 0.9288888888888889, 0.9261111111111111, 0.9305555555555556, 0.9311111111111111, 0.9261111111111111, 0.9238888888888889, 0.9272222222222222], [0.9115, 0.9285, 0.926, 0.922, 0.924, 0.926, 0.9465, 0.92, 0.942, 0.9305]]


#---------------------------------------------------------------------------------

train_sizes = [100, 250, 500, 750, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]

train_scores_mean = np.mean(train_scores, axis=1)
train_scores_std = np.std(train_scores, axis=1)
test_scores_mean = np.mean(test_scores, axis=1)
test_scores_std = np.std(test_scores, axis=1)
plt.grid()

plt.fill_between(train_sizes, train_scores_mean - train_scores_std,
                     train_scores_mean + train_scores_std, alpha=0.1,
                     color="r")
plt.fill_between(train_sizes, test_scores_mean - test_scores_std,
                     test_scores_mean + test_scores_std, alpha=0.1, color="g")

plt.plot(train_sizes, train_scores_mean, 'o-', color="r", label="Training")
plt.plot(train_sizes, test_scores_mean, 'o-', color="g", label="Test")

plt.xlabel("Datens√§tze")
plt.ylabel("Korrektklassifizierungsrate")
# plt.title("Test Results", fontdict=None, loc='center')

plt.legend(loc="lower right")
plt.savefig('results.png')
plt.show()


#---------------------------------------------------------------------------------
